apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
group = 'com.github.SpeedataG'

android {
    def versions = rootProject.ext.versions
    compileSdkVersion versions.sdkCompileVersion
    buildToolsVersion versions.toolsBuildVersion

    defaultConfig {
        minSdkVersion versions.sdkMinVersion
        targetSdkVersion versions.sdkTargetVersion
        versionCode versions.appVersionCode
        versionName versions.appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters 'arm64-v8a'
//        }
    }
    buildTypes {
        release {
//            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

def siteUrl = 'https://github.com/SpeedataG/Device' // 项目的主页
def gitUrl = 'https://github.com/SpeedataG/Device.git' // Git仓库的url
group = "com.speedata" //一般填你唯一的包名
version = "1.6.1"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'Device'
                // #CONFIG# // project title
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'echoxbr'
                        // #CONFIG# // your user id (you can write your nickname)
                        name 'echoxbr'
                        // #CONFIG# // your user name
                        email 'bairu.xu@speedatagroup.com'
                        // #CONFIG# // your email
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    // archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
boolean isHasFile = false
if (project.rootProject.file('local.properties') != null) {
    isHasFile = true
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}
bintray {
    user = isHasFile ? properties.getProperty("bintray.user") : System.getenv("bintray.user")
    key = isHasFile ? properties.getProperty("bintray.apikey") : System.getenv("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "Speedata" //repo的name必须与你创建maven仓库时命名的name一致
        name = "DeviceLib"
        // #CONFIG# project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

task makeJar(type: Jar, dependsOn: ['compileReleaseJavaWithJavac']) {
    from file('build/intermediates/classes/release')
    from fileTree(dir: 'src/main', includes: ['assets/**'])
    //目标文件名称
    archiveName = 'device_' + version + '.jar'
    destinationDir = file('build/libs')
    exclude "lbs/tmplibary/BuildConfig.class"
    exclude "lbs/tmplibary/BuildConfig\$*.class"
    exclude "**/R.class"
    exclude "**/R\$*.class"
    //只导入资源路径集下的部分资源
//    include "lbs/**/*.class"
//    include "assets/**"
}
task proguard(type: proguard.gradle.ProGuardTask, dependsOn: makeJar) {
//  输入路径
    injars "build/libs/un_proguard.jar"
//  输出路径
    outjars 'libs/device_1.4.7.jar'
//  添加配置信息
    configuration 'proguard-rules.pro'
}





dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    def dependencies = rootProject.ext.deps
    api dependencies.suport.appcompat
    testImplementation 'junit:junit:4.12'
    compileOnly 'com.google.code.gson:gson:2.8.5'
    compileOnly 'com.alibaba:fastjson:1.2.54'

}



